"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./lib/fetchTranscription.js":
/*!***********************************!*\
  !*** ./lib/fetchTranscription.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTranscription: function() { return /* binding */ fetchTranscription; }\n/* harmony export */ });\nasync function fetchTranscription(audioBase64) {\n    let fileName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"audio.webm\";\n    const endpoint = \"https://nzjsfinls5.execute-api.us-east-1.amazonaws.com/dev/transcribe\"; // Ruta correcta\n    try {\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                audioBase64,\n                fileName\n            })\n        });\n        if (!response.ok) {\n            console.error(\"❌ Error HTTP:\", response.status);\n            const errorText = await response.text();\n            throw new Error(\"Error de red: \".concat(errorText));\n        }\n        const data = await response.json();\n        return {\n            success: true,\n            transcript: data.transcript || data.text || \"\",\n            item: data.item || \"\",\n            precio_compra: data.precio_compra || \"\",\n            moneda: data.moneda || \"\",\n            cliente: data.cliente || \"\"\n        };\n    } catch (error) {\n        console.error(\"❌ Error al transcribir:\", error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZmV0Y2hUcmFuc2NyaXB0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxlQUFlQSxtQkFBbUJDLFdBQVc7UUFBRUMsV0FBQUEsaUVBQVc7SUFDL0QsTUFBTUMsV0FBVyx5RUFBeUUsZ0JBQWdCO0lBRTFHLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU1GLFVBQVU7WUFDckNHLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNuQlQ7Z0JBQ0FDO1lBQ0Y7UUFDRjtRQUVBLElBQUksQ0FBQ0UsU0FBU08sRUFBRSxFQUFFO1lBQ2hCQyxRQUFRQyxLQUFLLENBQUMsaUJBQWlCVCxTQUFTVSxNQUFNO1lBQzlDLE1BQU1DLFlBQVksTUFBTVgsU0FBU1ksSUFBSTtZQUNyQyxNQUFNLElBQUlDLE1BQU0saUJBQTJCLE9BQVZGO1FBQ25DO1FBRUEsTUFBTUcsT0FBTyxNQUFNZCxTQUFTZSxJQUFJO1FBRWhDLE9BQU87WUFDTEMsU0FBUztZQUNUQyxZQUFZSCxLQUFLRyxVQUFVLElBQUlILEtBQUtGLElBQUksSUFBSTtZQUM1Q00sTUFBTUosS0FBS0ksSUFBSSxJQUFJO1lBQ25CQyxlQUFlTCxLQUFLSyxhQUFhLElBQUk7WUFDckNDLFFBQVFOLEtBQUtNLE1BQU0sSUFBSTtZQUN2QkMsU0FBU1AsS0FBS08sT0FBTyxJQUFJO1FBQzNCO0lBQ0YsRUFBRSxPQUFPWixPQUFPO1FBQ2RELFFBQVFDLEtBQUssQ0FBQywyQkFBMkJBLE1BQU1hLE9BQU87UUFDdEQsT0FBTztZQUNMTixTQUFTO1lBQ1RQLE9BQU9BLE1BQU1hLE9BQU87UUFDdEI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9mZXRjaFRyYW5zY3JpcHRpb24uanM/NDlkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hUcmFuc2NyaXB0aW9uKGF1ZGlvQmFzZTY0LCBmaWxlTmFtZSA9IFwiYXVkaW8ud2VibVwiKSB7XG4gIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL256anNmaW5sczUuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGV2L3RyYW5zY3JpYmVcIjsgLy8gUnV0YSBjb3JyZWN0YVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChlbmRwb2ludCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdWRpb0Jhc2U2NCxcbiAgICAgICAgZmlsZU5hbWUsXG4gICAgICB9KSxcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgRXJyb3IgSFRUUDpcIiwgcmVzcG9uc2Uuc3RhdHVzKTtcbiAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRXJyb3IgZGUgcmVkOiAke2Vycm9yVGV4dH1gKTtcbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICB0cmFuc2NyaXB0OiBkYXRhLnRyYW5zY3JpcHQgfHwgZGF0YS50ZXh0IHx8IFwiXCIsXG4gICAgICBpdGVtOiBkYXRhLml0ZW0gfHwgXCJcIixcbiAgICAgIHByZWNpb19jb21wcmE6IGRhdGEucHJlY2lvX2NvbXByYSB8fCBcIlwiLFxuICAgICAgbW9uZWRhOiBkYXRhLm1vbmVkYSB8fCBcIlwiLFxuICAgICAgY2xpZW50ZTogZGF0YS5jbGllbnRlIHx8IFwiXCIsXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwi4p2MIEVycm9yIGFsIHRyYW5zY3JpYmlyOlwiLCBlcnJvci5tZXNzYWdlKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICB9O1xuICB9XG59Il0sIm5hbWVzIjpbImZldGNoVHJhbnNjcmlwdGlvbiIsImF1ZGlvQmFzZTY0IiwiZmlsZU5hbWUiLCJlbmRwb2ludCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsImNvbnNvbGUiLCJlcnJvciIsInN0YXR1cyIsImVycm9yVGV4dCIsInRleHQiLCJFcnJvciIsImRhdGEiLCJqc29uIiwic3VjY2VzcyIsInRyYW5zY3JpcHQiLCJpdGVtIiwicHJlY2lvX2NvbXByYSIsIm1vbmVkYSIsImNsaWVudGUiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/fetchTranscription.js\n"));

/***/ })

});